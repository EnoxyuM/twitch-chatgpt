import requests
import telegram
import time
import os

TELEGRAM_BOT_TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN')
TELEGRAM_CHANNEL_ID = os.environ.get('TELEGRAM_CHANNEL_ID')
TWITCH_CLIENT_ID = os.environ.get('TWITCH_CLIENT_ID')
TWITCH_CLIENT_SECRET = os.environ.get('TWITCH_CLIENT_SECRET')
TWITCH_USERNAME = os.environ.get('TWITCH_USERNAME')

# --- –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å—Ç—Ä–∏–º–∞ ---
is_live = False

# --- –§—É–Ω–∫—Ü–∏–∏ ---
def get_twitch_access_token():
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è Twitch API."""
    url = 'https://id.twitch.tv/oauth2/token'
    params = {
        'client_id': TWITCH_CLIENT_ID,
        'client_secret': TWITCH_CLIENT_SECRET,
        'grant_type': 'client_credentials'
    }
    response = requests.post(url, params=params)
    response.raise_for_status() # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏ HTTP
    return response.json().get('access_token')

def check_stream_status(access_token):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –æ–Ω–ª–∞–π–Ω –ª–∏ —Å—Ç—Ä–∏–º."""
    url = f'https://api.twitch.tv/helix/streams?user_login={TWITCH_USERNAME}'
    headers = {
        'Client-ID': TWITCH_CLIENT_ID,
        'Authorization': f'Bearer {access_token}'
    }
    try:
        response = requests.get(url, headers=headers)
        response.raise_for_status()
        data = response.json()
        return data.get('data')[0] if data.get('data') else None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ Twitch API: {e}")
        return None

def send_telegram_notification(bot, stream_info):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram."""
    title = stream_info.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
    game = stream_info.get('game_name', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')
    message = (
        f"üî• –°–¢–†–ò–ú –ù–ê–ß–ê–õ–°–Ø! üî•\n\n"
        f"üí¨ **{title}**\n"
        f"üéÆ –ò–≥—Ä–∞: **{game}**\n\n"
        f"üîó –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å: https://www.twitch.tv/{TWITCH_USERNAME}"
    )
    try:
        bot.send_message(
            chat_id=TELEGRAM_CHANNEL_ID,
            text=message,
            parse_mode=telegram.ParseMode.MARKDOWN
        )
        print("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {e}")

# --- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª ---
if __name__ == '__main__':
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if not all([TELEGRAM_BOT_TOKEN, TELEGRAM_CHANNEL_ID, TWITCH_CLIENT_ID, TWITCH_CLIENT_SECRET, TWITCH_USERNAME]):
        print("–û—à–∏–±–∫–∞: –Ω–µ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–¥–∞–Ω—ã!")
    else:
        bot = telegram.Bot(token=TELEGRAM_BOT_TOKEN)
        access_token = get_twitch_access_token()

        if not access_token:
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ Twitch. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Client ID –∏ Secret.")
        else:
            print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç–∞—Ç—É—Å–∞ —Å—Ç—Ä–∏–º–∞...")
            while True:
                stream_info = check_stream_status(access_token)
                
                if stream_info and not is_live:
                    print(f"{TWITCH_USERNAME} –æ–Ω–ª–∞–π–Ω! –û—Ç–ø—Ä–∞–≤–ª—è—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.")
                    send_telegram_notification(bot, stream_info)
                    is_live = True
                elif not stream_info and is_live:
                    print(f"{TWITCH_USERNAME} —Ç–µ–ø–µ—Ä—å –æ—Ñ—Ñ–ª–∞–π–Ω.")
                    is_live = False
                else:
                    # –ü—Ä–æ—Å—Ç–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç
                    status = "–û–Ω–ª–∞–π–Ω" if is_live else "–û—Ñ—Ñ–ª–∞–π–Ω"
                    print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞... {TWITCH_USERNAME} —Å–µ–π—á–∞—Å {status}. –°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 60 —Å–µ–∫—É–Ω–¥.")

                time.sleep(60) # –ü–∞—É–∑–∞ 60 —Å–µ–∫—É–Ω–¥